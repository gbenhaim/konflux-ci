apiVersion: batch/v1
kind: CronJob
metadata:
  name: remove-expired-releases
  namespace: release-service
spec:
  failedJobsHistoryLimit: 7
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - "set -o pipefail\nPATH=\"/bin:/usr/bin:/usr/local/bin\"\nMAX_PROCS=5\nEXPIRED_RELEASES_FILE=\"/var/tmp/releases-to-be-deleted\"\nNOW=$(date
              +%s)\nkubectl get release --all-namespaces \\\n--sort-by=.status.expirationTime
              \\\n--template '{{range .items}}{{.metadata.name}}{{\"\\t\"}}{{.metadata.namespace}}{{\"\\t\"}}{{.status.expirationTime}}{{\"\\n\"}}{{end}}'
              > /tmp/kubectl-out\nawk -v now=${NOW} '{\n     # parsing the expirationTime
              and converting it to epoch\n     # so we can calculate easier the expired
              Releases\n     gsub(\"[:\\\\-TZ]\", \" \", $3)\n     t=mktime($3)\n
              \    expirationTime=strftime(\"%s\", t)\n     #\n     # expirationTime
              should be smaller than today in seconds so it can be deleted\n     if(now
              > expirationTime) {\n       args=\"%s:%s\"\n       printf(args, $1,
              $2)\n     } \n  }' /var/tmp/kubectl-out > $EXPIRED_RELEASES_FILE\n#
              The deleteAndLog will run the Release deletion and save the operation
              in a structured way that        \n# can be read easily by kubectl or
              journalctl                                                           \nfunction
              deleteAndLog() {\n  release=${1%:*}\n  namespace=${1#*:}\n  kubectl
              delete release $release -n $namespace |while read logLine; do\n    echo
              \"INFO: namespace=${namespace} log=${logLine}\"\n  done                                                                                                  \n}
              \                                                                                                      \nexport
              -f deleteAndLog\nxargs -a ${EXPIRED_RELEASES_FILE} -i -P ${MAX_PROCS}
              bash -c 'deleteAndLog \"{}\"'\n"
            image: quay.io/redhat-appstudio/release-service-utils:305541d8b8c2670dea4b50bd8c56858c365ca11e
            imagePullPolicy: IfNotPresent
            name: release-cleanup
            resources:
              limits:
                cpu: 200m
                memory: 200Mi
              requests:
                cpu: 10m
                memory: 10Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
            - mountPath: /var/tmp
              name: temp-directory
          restartPolicy: Never
          serviceAccountName: release-service-controller-manager
          volumes:
          - emptyDir: {}
            name: temp-directory
  schedule: 10 03 * * *
  successfulJobsHistoryLimit: 7
